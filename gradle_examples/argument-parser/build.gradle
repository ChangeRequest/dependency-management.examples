plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'lemon.school'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Argument Parser'
                description = 'An Argument parser library'
                url = 'https://github.com/ChangeRequest/dependency-management.examples/tree/master/gradle_examples/argument-parser'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://raw.githubusercontent.com/ChangeRequest/dependency-management.examples/master/gradle_examples/argument-parser/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'xSAVIKx'
                        name = 'Yurii Serhiichuk'
                        email = 'iurii.sergiichuk[at]gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/ChangeRequest/dependency-management.examples.git'
                    developerConnection = 'scm:git:https://github.com/ChangeRequest/dependency-management.examples.git'
                    url = 'https://github.com/ChangeRequest/dependency-management.examples/tree/master/gradle_examples/argument-parser'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
